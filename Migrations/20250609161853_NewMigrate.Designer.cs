// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using gs_sensolux.Infrastructure.Context;

#nullable disable

namespace gs_sensolux.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250609161853_NewMigrate")]
    partial class NewMigrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Email", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("BOOLEAN");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("SSX_EMAILS", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ENDERECO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("NVARCHAR2(2)")
                        .HasColumnName("ESTADO");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("RUA");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SSX_USUARIOS_ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SSX_ENDERECOS", (string)null);
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.ItensPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ITEM_PEDIDO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PedidoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SSX_PEDIDOS_ID_PEDIDO");

                    b.Property<int>("Quantidade")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QUANTIDADE");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SSX_USUARIOS_ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("SSX_ITENS_PEDIDO", (string)null);
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PEDIDO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("DATE")
                        .HasColumnName("DATA_PEDIDO");

                    b.Property<decimal>("Preco")
                        .HasColumnType("NUMBER(6,2)")
                        .HasColumnName("PRECO");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.ToTable("SSX_PEDIDOS", (string)null);
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PRODUTO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR2(80)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("ItemPedidoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SSX_IP_ID_ITEM_PEDIDO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("NOME");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PRECO_UNITARIO");

                    b.HasKey("Id");

                    b.HasIndex("ItemPedidoId");

                    b.ToTable("SSX_PRODUTOS", (string)null);
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_SENSOR");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("NVARCHAR2(35)")
                        .HasColumnName("MODELO");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SSX_PRODUTOS_ID_PRODUTO");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("NVARCHAR2(12)")
                        .HasColumnName("TIPO");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("SSX_SENSORES", (string)null);
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_USUARIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("EmailId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("SSX_EMAILS_ID_EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ROLE");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("SENHA");

                    b.HasKey("Id");

                    b.HasIndex("EmailId")
                        .IsUnique();

                    b.ToTable("SSX_USUARIOS", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Endereco", b =>
                {
                    b.HasOne("gs_sensolux.Domain.Entity.Usuario", "Usuario")
                        .WithMany("Enderecos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SSX_USUARIOS_ID_USUARIO");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.ItensPedido", b =>
                {
                    b.HasOne("gs_sensolux.Domain.Entity.Pedido", "Pedido")
                        .WithOne("Itens")
                        .HasForeignKey("gs_sensolux.Domain.Entity.ItensPedido", "PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gs_sensolux.Domain.Entity.Usuario", "Usuario")
                        .WithMany("ItensPedido")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Produto", b =>
                {
                    b.HasOne("gs_sensolux.Domain.Entity.ItensPedido", null)
                        .WithMany("Produtos")
                        .HasForeignKey("ItemPedidoId");
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Sensor", b =>
                {
                    b.HasOne("gs_sensolux.Domain.Entity.Produto", "Produto")
                        .WithMany("Sensores")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Usuario", b =>
                {
                    b.HasOne("gs_sensolux.Domain.Entity.Email", "Email")
                        .WithOne()
                        .HasForeignKey("gs_sensolux.Domain.Entity.Usuario", "EmailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Email");
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.ItensPedido", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Pedido", b =>
                {
                    b.Navigation("Itens")
                        .IsRequired();
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Produto", b =>
                {
                    b.Navigation("Sensores");
                });

            modelBuilder.Entity("gs_sensolux.Domain.Entity.Usuario", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("ItensPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
